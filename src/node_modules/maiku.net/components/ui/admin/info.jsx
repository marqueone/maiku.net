import React, { PureComponent } from "react";
import PropTypes from "prop-types";

import InfoList from "maiku.net/components/ui/admin/info-list";

const uuid = require("uuid/v4");

export default class Info extends PureComponent {
	state = {
		data: this.props.data,
	};

	componentWillReceiveProps(nextProps) {
		this.setState({ data: nextProps.data });
	}

    handleChange(event) {
		this.setState({ data: event.target.value });
	}

	addInfo = event => {
		event.preventDefault();

		this.props.add("info", {
			_id: uuid(),
			value: this.info.value,
		});

		this.form.reset();
	};

	updateInfo = event => {
		event.preventDefault();
	};

	render() {
		const numberOfInfoItems = !this.state.data ? 0 : this.state.data.length;
		const { remove, update, moveItem } = this.props;
		return (
			<div>
				<h5 className="font-accident-two-normal uppercase subtitle">Information list</h5>

				<div className="col-md-12">
					<div className="dividewhite2" />
					<div className="responsive-table">
						<InfoList data={this.props.data} remove={remove} update={update} moveItem={moveItem} />
					</div>
				</div>

				<div className="col-md-12">
					<div className="dividewhite2" />
					<div id="form-messages" />

					<form
						className="wpcf7-form"
						onSubmit={event => this.addInfo(event)}
						ref={input => {
							this.form = input;
						}}
					>
						<div className="field">
							<input
								className="form-control"
								type="text"
								id="info"
								name="info"
								placeholder="Information"
								required
								ref={input => {
									this.info = input;
								}}
							/>
						</div>

						<div className="field text-center">
							{numberOfInfoItems < 4 &&
								<button type="submit" className="btn btn-lg btn-darker">Add</button>}
						</div>

					</form>

				</div>
			</div>
		);
	}
}

Info.propTypes = {
	data: PropTypes.arrayOf(
		PropTypes.shape({
			_id: PropTypes.string,
			value: PropTypes.string,
		}),
	).isRequired,
	add: PropTypes.func.isRequired,
	remove: PropTypes.func.isRequired,
	update: PropTypes.func.isRequired,
	moveItem: PropTypes.func.isRequired,
};

Info.defaultProps = {
	data: [],
};

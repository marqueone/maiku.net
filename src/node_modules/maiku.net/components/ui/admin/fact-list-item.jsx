import React, { Component } from "react";
import PropTypes from "prop-types";

import { DragSource, DropTarget } from "react-dnd";

import { ItemTypes } from "maiku.net/components/ui/constants";

const cardSource = {
	beginDrag(props) {
		return {
			id: props.id,
			index: props.index,
		};
	},
	endDrag(props, monitor) {
		const dropIndex = monitor.getItem().index;
		const dragIndex = props.index;

		props.moveItem("facts", dragIndex, dropIndex);
	},
};

const cardTarget = {
	drop(props, monitor) {
		const dragIndex = monitor.getItem().index;
		const dropIndex = props.index;

		// Don't replace items with themselves
		if (dragIndex === dropIndex) {
			return;
		}

		monitor.getItem().index = dropIndex;
	},
};

class Fact extends Component {
	render() {
		const { item, connectDragSource, connectDropTarget } = this.props;

		return connectDragSource(
			connectDropTarget(
				<li key={item._id}>
					<div className="row" style={{ padding: "8px", borderTop: "1px solid rgb(221, 221, 221)" }}>
						<div className="col-md-3">{item.label}</div>
						<div className="col-md-6">{item.fact}</div>
						<div className="col-md-3" style={{ textAlign: "right" }} />
					</div>
				</li>,
			),
		);
	}
}

Fact = DropTarget(ItemTypes.FACT, cardTarget, connect => ({
	connectDropTarget: connect.dropTarget(),
}))(Fact);
Fact = DragSource(ItemTypes.FACT, cardSource, (connect, monitor) => ({
	connectDragSource: connect.dragSource(),
	isDragging: monitor.isDragging(),
}))(Fact);

Fact.propTypes = {
	item: PropTypes.shape({}).isRequired,
	connectDragSource: PropTypes.func,
	connectDropTarget: PropTypes.func,
};

Fact.defaultProps = {
    connectDragSource: () => {},
    connectDropTarget: () => {},
};

export default Fact;

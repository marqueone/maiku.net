import React, { Component } from "react";

export default class EmployerList extends Component {
    state = {
        editing: null
    }

    toggleEditing = (itemId) => {
        this.setState((prevState, props) => { prevState.editing = itemId })
    }

    handleEditField = event => {
        if (event.keyCode === 13) {
            const target = event.target;
            let update = {};

            update._id = this.state.editing;
            update[target.name] = target.value;

            this.handleUpdate(update);
        }
    }

    handleEditItem = () => {
        let itemId = this.state.editing;

        this.handleUpdate({
            _id: itemId,
            current: this.refs[`current_${itemId}`].value === "",
            company: this.refs[`company_${itemId}`].value,
            start: this.refs[`start_${itemId}`].value,
            end: this.refs[`end_${itemId}`].value,
            position: this.refs[`position_${itemId}`].value,
            description: this.refs[`description_${itemId}`].value
        });
    }

    handleUpdate = (update) => {
        this.props.updateEmployer(update);
        this.setState((prevState, props) => { prevState.editing = null })
    }

    renderItemOrEdit = item => {
        if (this.state.editing === item._id) {
            return (<tr
                key={`editing-${item._id}`}
                className="wpcf7-form"
            >
                <td>
                    <div className="field">
                        <input
                            onKeyDown={(event) => this.handleEditField(event)}
                            type="text"
                            className="form-control"
                            ref={`company_${item._id}`}
                            name="company"
                            defaultValue={item.company}
                        />
                    </div>

                    <div className="form-inline">
                        <div className="form-group" style={{ paddingRight: "10px" }}>
                            <input
                                onKeyDown={(event) => this.handleEditField(event)}
                                type="text"
                                className="form-control"
                                ref={`start_${item._id}`}
                                name="start"
                                defaultValue={item.start}
                            />
                        </div>
                        <div className="form-group">
                            <input
                                onKeyDown={(event) => this.handleEditField(event)}
                                type="text"
                                className="form-control"
                                ref={`end_${item._id}`}
                                name="end"
                                defaultValue={item.end}
                            />
                        </div>
                    </div>

                    <div className="field">
                        <input
                            onKeyDown={(event) => this.handleEditField(event)}
                            type="text"
                            className="form-control"
                            ref={`position_${item._id}`}
                            name="position"
                            defaultValue={item.position}
                        />
                    </div>

                    <div className="field">
                        <textarea
                            onKeyDown={(event) => this.handleEditField(event)}
                            type="text"
                            className="form-control"
                            ref={`description_${item._id}`}
                            name="description"
                            defaultValue={item.description}
                        >
                        </textarea>
                    </div>
                </td>
                <td>
                    <button
                        className="btn btn-default"
                        onClick={() => this.handleEditItem()}
                    >Update</button>
                </td>
            </tr>);
        } else {
            return (
                <tr
                    key={item._id}
                    onClick={() => this.toggleEditing(item._id)}
                >
                    <td>{item.company}</td>
                    <td>
                        <button
                            className="btn btn-default"
                            onClick={() => this.removeEmployer(item)}
                        >remove</button>
                    </td>
                </tr>);
        }
    }

    removeEmployer = item => {
        this.props.removeEmployer(item);
    }

    render() {
        const { data } = this.props;
        console.log(data)
        return (
            <table className="table">
                <thead>
                    <tr>
                        <td>Employer</td>
                        <td className="width-15"></td>
                    </tr>
                </thead>
                <tbody>
                    {data.map(item => { return this.renderItemOrEdit(item); })}
                </tbody>
            </table>
        );
    }
}
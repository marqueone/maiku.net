import React, { Component } from "react";
import _ from "lodash";

import Layout from "maiku.net/components/ui/layout";
import PageTitle from "maiku.net/components/ui/page-title";
import ResumeFact from "maiku.net/components/ui/resume-fact";
import ResumeTimeLineProject from "maiku.net/components/ui/resume-timeline-project";
import ResumeJob from "maiku.net/components/ui/resume-job";
import ResumeSchool from "maiku.net/components/ui/resume-school";
import SkillSet from "maiku.net/components/ui/skill-set";

import base from "maiku.net/base";

export default class Resume extends Component {
	state = {
		data: {
			about: "",
			facts: [],
			info: [],
			employment: [],
			education: [],
			skills: [],
		},
	};

	componentWillMount() {
		this.ref = base.syncState("maiku-net/data", {
			context: this,
			state: "data",
			isNullable: true,
		});
	}

	componentWillUnmount() {
		base.removeBinding(this.ref);
	}

	render() {
		const { info, facts, skills, education, employment } = this.state.data;

		return (
			<Layout info={info}>
				<div className="content-wrap">

					<div id="resume" className="inner-content">

						<div className="container-fluid nopadding">

							<div className="row nopadding">
								<div className="col-md-3 nopadding" />
								<div className="col-md-9 nopadding">
									<PageTitle name="Resume" origin="left" duration={600} delay={100} distance="50px" />

									<section className="inner-section light bg-color01">
										<div className="padding-50">

											<div
												data-animation-origin="top"
												data-animation-duration="200"
												data-animation-delay="300"
												data-animation-distance="20px"
											>
												<h3 className="font-accident-two-light uppercase">Facts About Me</h3>
												<div className="dividewhite4" />
											</div>

											<div className="row">
												<div
													className="col-md-12"
													data-animation-origin="top"
													data-animation-duration="400"
													data-animation-delay="600"
													data-animation-distance="30px"
												>
													{facts.map(item => (
														<ResumeFact
															key={item._id}
															label={item.label}
															value={item.fact}
														/>
													))}
												</div>
											</div>
										</div>
									</section>

									<section id="timeline" className="light inner-section bg-color01">

										<div className="padding-50">

											<div
												className=""
												data-animation-origin="top"
												data-animation-duration="400"
												data-animation-delay="400"
												data-animation-distance="30px"
											>

												<h3 className="font-accident-two-light uppercase">
													Professional Timeline
												</h3>
												<h5 className="font-accident-two-normal uppercase subtitle">
													Working hard and making the success
												</h5>
												<div className="dividewhite1" />
											</div>

											{employment.map(employer => (
												<ul className="timeline-vert timeline" key={employer._id}>
													<ResumeJob
														start={employer.start}
														end={employer.end}
														company={employer.company}
														position={employer.position}
														description={employer.description}
													/>
													{_.has(employer, "projects")
														? employer.projects.map(project => (
															<ResumeTimeLineProject
																key={project._id}
																start={project.start}
																end={project.end}
																project={project.name}
																projectRole={project.role}
																description={project.description}
																tech={project.tech}
															/>
															))
														: null}
												</ul>
											))}
										</div>
									</section>

									<section id="timeline" className="light inner-section bg-color01">
										<div className="padding-50">
											<div
												className=""
												data-animation-origin="top"
												data-animation-duration="400"
												data-animation-delay="400"
												data-animation-distance="30px"
											>

												<h3 className="font-accident-two-light uppercase">
													Educational Timeline
												</h3>
												<h5 className="font-accident-two-normal uppercase subtitle">
													Learning, Growing, Specializing
												</h5>
												<div className="dividewhite1" />
											</div>

											<ul className="timeline-vert timeline">
												{education.map(item => (
													<ResumeSchool
														key={item._id}
														start={item.start}
														end={item.end}
														school={item.school}
														program={item.program}
														description={item.description}
													/>
												))}
											</ul>
										</div>
									</section>

									<section id="timeline" className="light inner-section bg-color01">
										<div className="padding-50">
											<div
												className=""
												data-animation-origin="top"
												data-animation-duration="400"
												data-animation-delay="400"
												data-animation-distance="30px"
											>

												<h3 className="font-accident-two-light uppercase">Skills</h3>
												<h5 className="font-accident-two-normal uppercase subtitle">
													Good at stuff, like this
												</h5>
												<div className="dividewhite1" />
											</div>

											<table className="table">
												<tbody>
													<tr>
														<td>
															<ul>
																<li><h4>Languages</h4></li>
																{skills
																	.filter(item => item.type === "language")
																	.map(item => (
																		<SkillSet
																			key={item._id}
																			name={item.name}
																			level={parseInt(item.level, 10)}
																		/>
																	))}
															</ul>
															<ul>
																<li><h4>Software</h4></li>
																{skills
																	.filter(item => item.type === "software")
																	.map(item => (
																		<SkillSet
																			key={item._id}
																			name={item.name}
																			level={parseInt(item.level, 10)}
																		/>
																	))}
															</ul>
														</td>
														<td />
														<td>
															<ul>
																<li><h4>Frameworks</h4></li>
																{skills
																	.filter(item => item.type === "framework")
																	.map(item => (
																		<SkillSet
																			key={item._id}
																			name={item.name}
																			level={parseInt(item.level, 10)}
																		/>
																	))}
															</ul>
															<ul>
																<li><h4>Operating Systems</h4></li>
																{skills
																	.filter(item => item.type === "os")
																	.map(item => (
																		<SkillSet
																			key={item._id}
																			name={item.name}
																			level={parseInt(item.level, 10)}
																		/>
																	))}
															</ul>
														</td>
													</tr>
												</tbody>
											</table>
											<div className="dividewhite6" />
										</div>
									</section>
								</div>
							</div>
						</div>
					</div>
				</div>
			</Layout>
		);
	}
}
